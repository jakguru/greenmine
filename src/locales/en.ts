export default {
  actions: {
    login: "Sign In",
    register: "Register",
    view: "View {what}",
  },
  models: {
    attachment: "Attachment",
    changeset: "Changeset",
    document: "Document",
    issue: "Issue",
    note: "Note",
    message: "Message",
    reply: "Reply",
    news: "News",
    project: "Project",
    timeEntry: "Time Entry",
    wikiPage: "Wiki Page",
    remoteGitCommit: "Commit",
    remoteGitMergeRequestOpened: "Merge Request",
    remoteGitMergeRequestClosed: "Merge Request",
    remoteGitMergeRequestMerged: "Merge Request",
    remoteGitPipelineStarted: "Pipeline",
    remoteGitPipelineEnded: "Pipeline",
    remoteGitRelease: "Release",
    remoteGitTag: "Tag",
    unknown: "Unknown",
  },
  pages: {
    home: { title: "Home" },
    projects: { title: "Projects" },
    help: { title: "Help" },
    search: { title: "Search" },
    "account-activate": { title: "" },
    "account-activation-email": { title: "" },
    "account-lost-password": { title: "" },
    "account-register": { title: "" },
    "account-twofa": { title: "" },
    "account-twofa-confirm": { title: "" },
    activity: { title: "Activity" },
    admin: { title: "Administration", menu: { title: "View All" } },
    "admin-info": {
      title: "System Information",
      content: {
        redmine: "Redmine Build Version",
        checklist: {
          defaultAdministratorAccountChanged:
            "Default administrator account changed",
          fileRepositoryWritable: "Attachments directory writable",
          pluginAssetsWritable: "Plugin assets directory writable",
          allMigrationsHaveBeenRun: "All database migrations have been run",
          minimagickAvailable: "MiniMagick available",
          convertAvailable: "ImageMagick convert available",
          gsAvailable: "ImageMagick PDF support available",
          defaultActiveJobQueueChanged: "Default queue adapter changed",
        },
      },
    },
    "admin-integrations": {
      title: "Integrations",
      admin: { title: "Integrations" },
    },
    "admin-integrations-github": {
      title: "GitHub Integrations",
    },
    "admin-integrations-github-new": {
      title: "Create a GitHub Integration",
      content: {
        fields: {
          name: "Integration Name",
          api_token: "Access Token",
          active: "Active",
        },
      },
      onSave: {
        success: "Integration created successfully",
        error: "An error occurred while creating the integration",
      },
    },
    "admin-integrations-github-id": {
      title: "Manage a GitHub Integration",
      content: {
        fields: {
          name: "Integration Name",
          api_token: "Access Token",
          active: "Active",
        },
      },
      tabs: {
        integration: "Integration",
        repositories: "Repositories",
        users: "Users",
      },
      repositories: {
        title: "GitHub Repositories",
        cta: "Sync Repositories",
        onFetch: {
          success: "Job Enqueued Successfully",
          error: "An error occurred while enqueueing the job",
        },
        onEnqueueJobToInstallWebhooks: {
          success: "Job(s) Enqueued Successfully",
          warning: "Some jobs failed to enqueue",
          error: "An error occurred while enqueueing the job(s)",
        },
        onEnqueueJobToFetchEntities: {
          success: "Job Enqueued Successfully",
          error: "An error occurred while enqueueing the job",
        },
      },
      users: {
        title: "GitHub Users",
        cta: "Sync Users",
        onFetch: {
          success: "Job Enqueued Successfully",
          error: "An error occurred while enqueueing the job",
        },
        onSave: {
          error: "An error occurred while saving the user association",
        },
      },
      entities: {
        cta: "Sync Entities",
        onFetch: {
          success: "Job Enqueued Successfully",
          error: "An error occurred while enqueueing the job",
        },
      },
      onSave: {
        success: "Integration created successfully",
        error: "An error occurred while creating the integration",
      },
    },
    "admin-integrations-github-id-repository": {
      title: "Manage GitHub Repository",
      content: {
        associatedProjects: "Associated Projects",
        associatedProjectsTable: {
          headers: {
            name: "Project Name",
            isAssociated: "Associated",
          },
        },
        openInGitHub: "Open in GitHub",
        copyGitHttpUrl: "Copy Git HTTP URL",
        copyGitSshUrl: "Copy Git SSH URL",
        enqueueJobToInstallWebhooks: "Install Webhooks",
      },
      onSave: {
        success: "Project associations saved successfully",
        error: "An error occurred while saving the project associations",
      },
      onEnqueueJobToInstallWebhooks: {
        success: "Job Enqueued Successfully",
        error: "An error occurred while enqueueing the job",
      },
      onEnqueueJobToFetchEntities: {
        success: "Job Enqueued Successfully",
        error: "An error occurred while enqueueing the job",
      },
    },
    "admin-integrations-gitlab": {
      title: "GitLab Integrations",
    },
    "admin-integrations-gitlab-new": {
      title: "Create a GitLab Integration",
      content: {
        fields: {
          name: "Integration Name",
          url: "Base URL",
          api_token: "Access Token",
          active: "Active",
        },
      },
      onSave: {
        success: "Integration created successfully",
        error: "An error occurred while creating the integration",
      },
    },
    "admin-integrations-gitlab-id": {
      title: "Manage a GitLab Integration",
      content: {
        fields: {
          name: "Integration Name",
          url: "Base URL",
          api_token: "Access Token",
          active: "Active",
        },
      },
      tabs: {
        integration: "Integration",
        projects: "Projects",
        users: "Users",
      },
      projects: {
        title: "GitLab Projects",
        cta: "Sync Projects",
        onFetch: {
          success: "Job Enqueued Successfully",
          error: "An error occurred while enqueueing the job",
        },
        onEnqueueJobToInstallWebhooks: {
          success: "Job(s) Enqueued Successfully",
          warning: "Some jobs failed to enqueue",
          error: "An error occurred while enqueueing the job(s)",
        },
        onEnqueueJobToFetchEntities: {
          success: "Job Enqueued Successfully",
          error: "An error occurred while enqueueing the job",
        },
      },
      users: {
        title: "GitLab Users",
        cta: "Sync Users",
        onFetch: {
          success: "Job Enqueued Successfully",
          error: "An error occurred while enqueueing the job",
        },
        onSave: {
          error: "An error occurred while saving the user association",
        },
      },
      entities: {
        cta: "Sync Entities",
        onFetch: {
          success: "Job Enqueued Successfully",
          error: "An error occurred while enqueueing the job",
        },
      },
      onSave: {
        success: "Integration created successfully",
        error: "An error occurred while creating the integration",
      },
    },
    "admin-integrations-gitlab-id-project": {
      title: "Manage GitLab Project",
      content: {
        associatedProjects: "Associated Projects",
        associatedProjectsTable: {
          headers: {
            name: "Project Name",
            isAssociated: "Associated",
          },
        },
        openInGitLab: "Open in GitLab",
        copyGitHttpUrl: "Copy Git HTTP URL",
        copyGitSshUrl: "Copy Git SSH URL",
        enqueueJobToInstallWebhooks: "Install Webhooks",
      },
      onSave: {
        success: "Project associations saved successfully",
        error: "An error occurred while saving the project associations",
      },
      onEnqueueJobToInstallWebhooks: {
        success: "Job Enqueued Successfully",
        error: "An error occurred while enqueueing the job",
      },
      onEnqueueJobToFetchEntities: {
        success: "Job Enqueued Successfully",
        error: "An error occurred while enqueueing the job",
      },
    },
    "admin-integrations-pagerduty": {
      title: "PagerDuty Integrations",
    },
    "admin-integrations-sentry": {
      title: "Sentry Integrations",
    },
    "admin-integrations-slack": {
      title: "Slack Integrations",
    },
    "admin-integrations-webhooks": {
      title: "Webhook Integrations",
    },
    "admin-integrations-monday": {
      title: "Monday Integrations",
    },
    "admin-integrations-monday-new": {
      title: "Create a Monday Integration",
      content: {
        fields: {
          name: "Integration Name",
          api_token: "Access Token",
          active: "Active",
        },
      },
      onSave: {
        success: "Integration created successfully",
        error: "An error occurred while creating the integration",
      },
    },
    "admin-integrations-monday-id": {
      title: "Manage a Monday Integration",
      content: {
        fields: {
          name: "Integration Name",
          api_token: "Access Token",
          active: "Active",
        },
      },
      tabs: {
        integration: "Integration",
        boards: "Boards",
        users: "Users",
      },
      boards: {
        title: "Monday Boards",
        cta: "Sync Boards",
        onFetch: {
          success: "Job Enqueued Successfully",
          error: "An error occurred while enqueueing the job",
        },
        onEnqueueJobToInstallWebhooks: {
          success: "Job(s) Enqueued Successfully",
          warning: "Some jobs failed to enqueue",
          error: "An error occurred while enqueueing the job(s)",
        },
      },
      users: {
        title: "Monday Users",
        cta: "Sync Users",
        onFetch: {
          success: "Job Enqueued Successfully",
          error: "An error occurred while enqueueing the job",
        },
        onSave: {
          error: "An error occurred while saving the user association",
        },
      },
      onSave: {
        success: "Integration created successfully",
        error: "An error occurred while creating the integration",
      },
    },
    "admin-integrations-monday-id-board": {
      title: "Manage Monday Board",
      content: {
        associatedBoards: "Associated Boards",
        associatedBoardsTable: {
          headers: {
            name: "Board Name",
            isAssociated: "Associated",
          },
        },
        openInMonday: "Open in Monday",
        enqueueJobToInstallWebhooks: "Install Webhooks",
        enqueueJobToRefreshBoardMeta: "Refresh Board",
      },
      fields: {
        project_id: "Project for New Issues from Monday",
        field_mapping_for: 'Friday Field for Monday Column "{title}" ({id})',
      },
      onSave: {
        success: "Board configuration saved successfully",
        error: "An error occurred while saving the board configuration",
      },
      onEnqueueJobToInstallWebhooks: {
        success: "Job Enqueued Successfully",
        error: "An error occurred while enqueueing the job",
      },
      onEnqueueJobToFetchEntities: {
        success: "Job Enqueued Successfully",
        error: "An error occurred while enqueueing the job",
      },
    },
    "admin-plugins": { title: "Integrated Plugins" },
    "admin-projects-context-menu": { title: "" },
    "admin-projects": { title: "Project Management" },
    "admin-sidekiq": {
      title: "Sidekiq Information",
      content: {
        stats: {
          processed: "Processed",
          failed: "Failed",
          busy: "Busy",
          scheduled_size: "Scheduled",
          retry_size: "Retries",
          enqueued: "Enqueued",
        },
      },
    },
    "attachments-id": { title: "" },
    "attachments-id-filename": { title: "" },
    "attachments-object-type-object-id-download": { title: "" },
    "attachments-object-type-object-id-edit": { title: "" },
    "attachments-download-id": { title: "" },
    "attachments-download-id-filename": { title: "" },
    "auth-sources": {
      title: "",
      admin: { title: "Authentication Source Management" },
    },
    "auth-sources-id": { title: "" },
    "auth-sources-id-edit": { title: "" },
    "auth-sources-id-test-connection": { title: "" },
    "auth-sources-autocomplete-for-new-user": { title: "" },
    "auth-sources-new": { title: "" },
    "boards-board-id-topics-id": { title: "" },
    "boards-board-id-topics-id-edit": { title: "" },
    "boards-board-id-topics-new": { title: "" },
    "boards-board-id-topics-quote-id": { title: "" },
    "custom-fields": {
      title: "Custom Fields",
      admin: { title: "Custom Field Management" },
    },
    "custom-fields-custom-field-id-enumerations": { title: "" },
    "custom-fields-id-edit": {
      title: "Edit Custom Field",
      content: {
        fields: {
          default_value: "Default Value",
          description: "Description",
          extensions_allowed: "Allowed File Extensions",
          field_format: "Format",
          is_for_all: "For all projects",
          max_length: "Max Length",
          min_length: "Min Length",
          multiple: "Allow multiple values",
          name: "Name",
          possible_values: "Possible Values",
          project_ids: "Projects",
          regexp: "Regular Expression",
          role_ids: "Visible to users with role",
          tracker_ids: "Available on Trackers",
          type: "Related Model",
          url_pattern: "Linked URL",
          user_role: "Filter to Role",
          version_status: "Version Status",
          visible: "Visible to any users",
          is_required: "Required",
          is_filter: "Filterable",
          searchable: "Searchable",
          enumerations: "Possible values",
        },
        enumerations: {
          title: "Possible Values",
        },
      },
      onSave: {
        success: "Custom field updated successfully",
        error: "An error occurred while updating the custom field",
      },
    },
    "custom-fields-new": {
      title: "New Custom Field",
      content: {
        fields: {
          default_value: "Default Value",
          description: "Description",
          extensions_allowed: "Allowed File Extensions",
          field_format: "Format",
          is_for_all: "For all projects",
          max_length: "Max Length",
          min_length: "Min Length",
          multiple: "Allow multiple values",
          name: "Name",
          possible_values: "Possible Values",
          project_ids: "Projects",
          regexp: "Regular Expression",
          role_ids: "Visible to users with role",
          tracker_ids: "Available on Trackers",
          type: "Related Model",
          url_pattern: "Linked URL",
          user_role: "Filter to Role",
          version_status: "Version Status",
          visible: "Visible to any users",
          is_required: "Required",
          is_filter: "Filterable",
          searchable: "Searchable",
          enumerations: "Possible values",
        },
      },
      onSave: {
        success: "Custom field created successfully",
        error: "An error occurred while creating the custom field",
      },
    },
    "documents-id": { title: "" },
    "documents-id-edit": { title: "" },
    enumerations: {
      title: "Enumerations",
      admin: { title: "Enumeration Management" },
      form: {
        TimeEntryActivity: {
          title: "Time Tracking Activities",
        },
        IssueImpact: {
          title: "Issue Impact Levels",
        },
        IssuePriority: {
          title: "Issue Urgency Levels",
        },
        DocumentCategory: {
          title: "Document Categories",
        },
        cells: {
          name: "Name",
          isDefault: "Default",
          isActive: "Active",
          order: "Order",
        },
        pages: {
          "custom-fields-id-edit": {
            content: {
              enumerations: {
                title: "Possible Values",
              },
            },
          },
        },
      },
    },
    "enumerations-id-edit": { title: "" },
    "enumerations-type": { title: "" },
    "enumerations-new": { title: "" },
    groups: { title: "Group Management", admin: { title: "Group Management" } },
    "groups-group-id-memberships": { title: "" },
    "groups-group-id-memberships-id": { title: "" },
    "groups-group-id-memberships-id-edit": { title: "" },
    "groups-group-id-memberships-new": { title: "" },
    "groups-id": { title: "" },
    "groups-id-autocomplete-for-user": { title: "" },
    "groups-id-edit": {
      title: "Manage Group",
      content: {
        fields: {
          name: "Group Name",
          twofa_required: "Two-factor authentication required",
          avatar: "Avatar",
          users: "Group Members",
          memberships: "Group Projects",
        },
      },
      onSave: {
        success: "Group updated successfully",
        error: "An error occurred while updating the group",
      },
    },
    "groups-id-users-new": { title: "" },
    "groups-new": {
      title: "Create a Group",
      content: {
        fields: {
          name: "Group Name",
          twofa_required: "Two-factor authentication required",
          avatar: "Avatar",
          users: "Group Members",
          memberships: "Group Projects",
        },
      },
      onSave: {
        success: "Group created successfully",
        error: "An error occurred while creating the group",
      },
    },
    "imports-id": { title: "" },
    "imports-id-mapping": { title: "" },
    "imports-id-run": { title: "" },
    "imports-id-settings": { title: "" },
    "issue-categories-id": { title: "" },
    "issue-categories-id-edit": { title: "" },
    "issue-statuses": {
      title: "Issue Status Management",
      admin: { title: "Issue Status Management" },
      form: {
        values: {
          title: "Issue Statuses",
        },
        cells: {
          name: "Status",
          isClosed: "Closed",
          description: "Description",
          order: "Order",
          icon: "Icon",
          defaultDoneRatio: "Default %",
          textColor: "Text Color",
          backgroundColor: "BG Color",
        },
      },
    },
    "issue-statuses-id-edit": { title: "" },
    "issue-statuses-new": { title: "" },
    issues: { title: "Issues" },
    "issues-id": { title: "" },
    "issues-id-edit": { title: "" },
    "issues-id-tab-name": { title: "" },
    "issues-issue-id-relations": { title: "" },
    "issues-issue-id-time-entries-new": { title: "" },
    "issues-auto-complete": { title: "" },
    "issues-bulk-edit": { title: "" },
    "issues-calendar": { title: "Calendar" },
    "issues-changes": { title: "" },
    "issues-context-menu": { title: "" },
    "issues-gantt": { title: "Gantt" },
    "issues-imports-new": { title: "" },
    "issues-new": { title: "" },
    "issues-preview": { title: "" },
    "journals-id-diff": { title: "" },
    "journals-id-edit": { title: "" },
    login: {
      title: "Log In",
      content: {
        form: {
          header: "Login to {name}",
        },
      },
      dialog: {
        success: {
          title: "Welcome",
        },
      },
    },
    logout: {
      title: "Logging Out",
      content: {
        form: {
          header: "Signing out of your {name} account",
        },
        pleaseWaitWhileProcessing:
          "Please wait a moment while we process your request. You will be redirected when complete.",
      },
    },
    "mail-handler": { title: "" },
    "memberships-id": { title: "" },
    "memberships-id-edit": { title: "" },
    my: { title: "My Page" },
    "my-account": { title: "My Account" },
    "my-account-destroy": { title: "Delete my Account" },
    "my-api-key": { title: "My API Key" },
    "my-page": { title: "My Page" },
    "my-password": {
      title: "My Password",
      content: {
        fields: {
          password: "Current Password",
          new_password: "New Password",
          new_password_confirmation: "New Password Confirmation",
        },
      },
      onSave: {
        success: "Password updated successfully",
        error: "An error occurred while updating the password",
      },
    },
    "my-twofa-scheme-activate": { title: "" },
    "my-twofa-scheme-activate-confirm": { title: "" },
    "my-twofa-scheme-deactivate": { title: "" },
    "my-twofa-scheme-deactivate-confirm": { title: "" },
    "my-twofa-backup-codes": { title: "" },
    "my-twofa-backup-codes-confirm": { title: "" },
    "my-twofa-backup-codes-create": { title: "" },
    "my-twofa-select-scheme": { title: "" },
    news: { title: "News" },
    "news-id": { title: "" },
    "news-id-edit": { title: "" },
    "news-new": { title: "" },
    "news-preview": { title: "" },
    "preview-text": { title: "" },
    "projects-id": {
      title: "Project Overview",
      content: {
        members: "Members",
        subprojects: "Subprojects",
        gitlabProjects: "GitLab Projects",
        githubRepositories: "GitHub Repositories",
        mondayBoard: "Monday Board",
        description: "Description",
        issueSummaryByTracker: "Summary of Issues by Tracker",
        issueSummaryByStatus: "Summary of Issues by Status",
        timeSummaryChart: "Summary of Time Utilization",
        timeSummary: "Time Tracking",
        news: "News",
        allNews: "All News",
        wikiPages: "Wiki Pages",
        viewProfile: "Profile",
        timeSummaryPart: {
          estimated: "Total Estimated Time",
          spent: "Total Spent Time",
        },
        details: "Details",
        logTime: "Log Time",
        report: "Report",
        new: "New",
        documents: "Documents",
        files: "Files",
        allFiles: "All Files",
        activitySummary: "Summary of Activity",
      },
    },
    "projects-id-activity": { title: "Project Activity" },
    "projects-id-copy": { title: "Copy a Project" },
    "projects-id-edit": { title: "Project Settings" },
    "projects-id-issues-report": { title: "Project Issues" },
    "projects-id-issues-report-detail": { title: "Project Issues" },
    "projects-id-repository": { title: "Project Repository" },
    "projects-id-repository-repository-id": {
      title: "Project Repository Overview",
    },
    "projects-id-repository-repository-id-annotate-path": {
      title: "Project Repository Annotation",
    },
    "projects-id-repository-repository-id-browse-path": {
      title: "Project Repository Browse",
    },
    "projects-id-repository-repository-id-changes-path": {
      title: "Project Repository Changes",
    },
    "projects-id-repository-repository-id-diff-path": {
      title: "Project Repository Diff",
    },
    "projects-id-repository-repository-id-entry-path": {
      title: "Project Repository File",
    },
    "projects-id-repository-repository-id-graph": {
      title: "Project Repository Graph",
    },
    "projects-id-repository-repository-id-raw-path": {
      title: "Project Repository File",
    },
    "projects-id-repository-repository-id-revision": {
      title: "Project Repository Revision",
    },
    "projects-id-repository-repository-id-revisions": {
      title: "Project Repository Revisions",
    },
    "projects-id-repository-repository-id-revisions-rev": {
      title: "Project Repository Revision",
    },
    "projects-id-repository-repository-id-show-path": {
      title: "Project Repository File",
    },
    "projects-id-repository-repository-id-statistics": {
      title: "Project Repository Stats",
    },
    "projects-id-search": { title: "Project Search" },
    "projects-id-settings": {
      title: "Project Settings",
      tabs: {
        activities: "Time Tracking",
        boards: "Forums",
        categories: "Issue Categories",
        github: "GitHub",
        gitlab: "GitLab",
        issues: "Issue Tracking",
        members: "Members",
        monday: "Monday",
        project: "Project",
        repositories: "Repositories",
        sprints: "Sprints",
        versions: "Releases",
      },
      content: {
        fields: {
          avatar: "Avatar",
          banner: "Banner",
          name: "Project Name",
          identifier: "Project Identifier",
          description: "Description",
          homepage: "Homepage",
          is_public: "Public",
          parent_id: "Parent Project",
          inherit_members: "Inherit Members",
          enabled_module_names: "Enabled Modules",
          activities: "Enabled Time Tracking Activities",
          memberships: "Memberships",
          tracker_ids: "Enabled Issue Trackers",
          issue_custom_field_ids: "Enabled Issue Custom Fields",
          default_version_id: "Default Release",
          default_assigned_to_id: "Default Assignee",
          default_issue_query_id: "Default Issue Query",
          issue_categories: "Issue Categories",
          github_repository_ids: "Associated GitHub Repositories",
          gitlab_project_ids: "Associated GitLab Projects",
        },
      },
      onSave: {
        success: "Project updated successfully",
        error: "An error occurred while updating the project",
      },
    },
    "projects-id-settings-tab": { title: "Project Settings" },
    "projects-id-wiki-destroy": { title: "" },
    "projects-project-id-activities": { title: "Project Activities" },
    "projects-project-id-boards": { title: "" },
    "projects-project-id-boards-id": { title: "" },
    "projects-project-id-boards-id-edit": { title: "" },
    "projects-project-id-boards-new": { title: "" },
    "projects-project-id-documents": { title: "Project Documents" },
    "projects-project-id-documents-new": { title: "" },
    "projects-project-id-files": { title: "Project Files" },
    "projects-project-id-files-new": { title: "" },
    "projects-project-id-issue-categories": { title: "" },
    "projects-project-id-issue-categories-new": { title: "" },
    "projects-project-id-issues": { title: "Project Issues" },
    "projects-project-id-issues-copy-from-copy": { title: "" },
    "projects-project-id-issues-calendar": { title: "Project Calendar" },
    "projects-project-id-calendars": { title: "Project Calendar" },
    "projects-project-id-issues-gantt": { title: "Project Gantt" },
    "projects-project-id-gantts": { title: "Project Gantt" },
    "projects-project-id-issues-new": { title: "" },
    "projects-project-id-memberships": { title: "" },
    "projects-project-id-memberships-autocomplete": { title: "" },
    "projects-project-id-memberships-new": { title: "" },
    "projects-project-id-news": { title: "Project News" },
    "projects-project-id-news-new": { title: "" },
    "projects-project-id-queries-new": { title: "" },
    "projects-project-id-repositories-new": { title: "" },
    "projects-project-id-roadmap": { title: "" },
    "projects-project-id-time-entries": { title: "Project Spent Time" },
    "projects-project-id-timelog": { title: "Project Spent Time" },
    "projects-project-id-time-entries-new": { title: "" },
    "projects-project-id-time-entries-report": { title: "" },
    "projects-project-id-versions": { title: "Project Releases" },
    "projects-project-id-versions-new": { title: "" },
    "projects-project-id-wiki": { title: "Project Wiki" },
    "projects-project-id-wiki-id": { title: "" },
    "projects-project-id-wiki-id-version": { title: "" },
    "projects-project-id-wiki-id-version-annotate": { title: "" },
    "projects-project-id-wiki-id-version-diff": { title: "" },
    "projects-project-id-wiki-id-diff": { title: "" },
    "projects-project-id-wiki-id-edit": { title: "" },
    "projects-project-id-wiki-id-history": { title: "" },
    "projects-project-id-wiki-id-rename": { title: "" },
    "projects-project-id-wiki-date-index": { title: "" },
    "projects-project-id-wiki-export": { title: "" },
    "projects-project-id-wiki-index": { title: "" },
    "projects-project-id-wiki-new": { title: "" },
    "projects-autocomplete": { title: "" },
    "projects-new": {
      title: "Create a Project",
      content: {
        fields: {
          avatar: "Avatar",
          banner: "Banner",
          name: "Project Name",
          identifier: "Project Identifier",
          description: "Description",
          homepage: "Homepage",
          is_public: "Public",
          parent_id: "Parent Project",
          inherit_members: "Inherit Members",
          enabled_module_names: "Enabled Modules",
        },
      },
      onSave: {
        success: "Project created successfully",
        error: "An error occurred while creating the project",
      },
    },
    queries: { title: "" },
    "queries-id-edit": { title: "" },
    "queries-filter": { title: "" },
    "queries-new": { title: "" },
    "relations-id": { title: "" },
    "repositories-id-committers": { title: "" },
    "repositories-id-edit": { title: "" },
    roles: { title: "Role Management", admin: { title: "Role Management" } },
    "roles-id": { title: "" },
    "roles-id-edit": {
      title: "Manage a Role",
      content: {
        fields: {
          name: "Role Name",
          assignable: "Can be assigned Issues",
          issues_visibility: "Issues Visibility",
          users_visibility: "Users Visibility",
          time_entries_visibility: "Time Entries Visibility",
          all_roles_managed: "Can Manage All Roles",
          managed_role_ids: "Roles Managed",
          permissions: "Permissions",
          permissions_all_trackers: "Permissions for all Trackers",
          permissions_tracker_ids: "Permissions per Tracker",
          default_time_entry_activity_id: "Default Time Entry Activity",
        },
      },
      onSave: {
        success: "Role updated successfully",
        error: "An error occurred while updating the role",
      },
    },
    "roles-new": {
      title: "Create a New Role",
      content: {
        fields: {
          name: "Role Name",
          assignable: "Can be assigned Issues",
          issues_visibility: "Issues Visibility",
          users_visibility: "Users Visibility",
          time_entries_visibility: "Time Entries Visibility",
          all_roles_managed: "Can Manage All Roles",
          managed_role_ids: "Roles Managed",
          permissions: "Permissions",
          permissions_all_trackers: "Permissions for all Trackers",
          permissions_tracker_ids: "Permissions per Tracker",
          default_time_entry_activity_id: "Default Time Entry Activity",
        },
      },
      onSave: {
        success: "Role created successfully",
        error: "An error occurred while creating the role",
      },
    },
    "roles-permissions": { title: "" },
    settings: {
      title: "System Settings",
      admin: { title: "System Settings" },
      onSave: {
        success: "Settings updated successfully",
        error: "An error occurred while updating the settings",
      },
      content: {
        tabs: {
          general: "General",
          display: "Display",
          authentication: "Authentication",
          api: "API",
          sprints: "Sprints",
          projects: "Projects",
          users: "Users",
          issues: "Issue Tracking",
          activities: "Time Tracking",
          files: "Files",
          notifications: "Notifications",
          email: "Incoming Email",
          repositories: "Repositories",
          monday_com: "Monday.com Integration",
          gitlab: "GitLab Integration",
          sentry: "Sentry Integration",
          google_translate: "Google Translate Integration",
          chat_gpt: "ChatGPT Integration",
          slack: "Slack Integration",
          pagerduty: "PagerDuty Integration",
        },
        fields: {
          app_title: "Application Title",
          welcome_text: "Welcome Text",
          per_page_options: "Objects per page options",
          search_results_per_page: "Search results per page",
          activity_days_default: "Days displayed on project activity",
          host_name: "Host name and path",
          protocol: "Protocol",
          wiki_compression: "Wiki history compression",
          feeds_limit: "Max # of items in Atom feeds",
          default_language: "Default language",
          force_default_language_for_anonymous:
            "Force default language for anonymous users",
          force_default_language_for_loggedin:
            "Force default language for logged-in users",
          user_format: "User Display Format",
          gravatar_enabled: "Use Gravatar Icons",
          gravatar_default: "Default Gravatar Icon",
          login_required: "Authentication required",
          self_registration: "Self-registration",
          show_custom_fields_on_registration:
            "Show custom fields on registration",
          password_min_length: "Minimum password length",
          password_required_char_classes:
            "Required character classes for passwords",
          password_max_age: "Require password change after",
          lost_password: "Allow lost password recovery",
          twofa: "Two-factor authentication",
          session_lifetime: "Session Maxium Lifetime",
          session_timeout: "Session Inactivity Timeout",
          rest_api_enabled: "Enable RESTful API",
          jsonp_enabled: "Enable JSONP support",
          default_projects_public: "New Projects are public by default",
          default_projects_modules: "Default enabled modules for new projects",
          default_projects_tracker_ids:
            "Default issue trackers for new projects",
          sequential_project_identifiers:
            "Generate sequential project identifiers",
          new_project_user_role_id:
            "Role for non-admin user that creates a project",
          default_project_query: "Default project query",
          max_additional_emails: "Maximum number of additional email addresses",
          email_domains_allowed: "Allowed email domains",
          email_domains_denied: "Disallowed email domains",
          unsubscribe: "Allow users to delete their own account",
          default_users_hide_mail: "Hide user emails by default",
          default_notification_option: "Default notification option",
          default_users_no_self_notified: "Don't notify own changes by default",
          default_users_time_zone: "Default time zone",
          cross_project_issue_relations: "Allow cross-project issue relations",
          link_copied_issue: "Link issues on copy",
          cross_project_subtasks: "Allow cross-project subtasks",
          close_duplicate_issues: "Close duplicate issues automatically",
          issue_group_assignment: "Allow issues to be assigned to groups",
          default_issue_start_date_to_creation_date:
            "Use current date as start date for new issues",
          display_subprojects_issues:
            "Display subprojects issues on main project by default",
          issue_done_ratio: "Calculate the issue done ratio using",
          non_working_week_days: "Non-working week days",
          issues_export_limit: "Issues export limit",
          gantt_items_limit: "Max items displayed in Gantt chart",
          gantt_months_limit: "Max months displayed in Gantt chart",
          parent_issue_dates: "Parent issue start/due dates",
          parent_issue_done_ratio: "Parent issue done ratio",
          issue_list_default_columns: "Default Columns Displayed",
          issue_list_default_totals: "Default Totals Displayed",
          default_issue_query: "Default issue query",
          timelog_required_fields: "Required fields for time logs",
          timelog_max_hours_per_day: "Max hours per day per user",
          timelog_accept_0_hours: "Allow time logs with 0 hours",
          timelog_accept_future_dates: "Allow time logs with future dates",
          attachment_max_size: "Max Upload Size",
          bulk_download_max_size: "Max total size of bulk download",
          attachment_extensions_allowed: "Allowed Upload Extensions",
          attachment_extensions_denied: "Disallowed Upload Extensions",
          file_max_size_displayed: "Max size of inline displayed files",
          diff_max_lines_displayed: "Max lines displayed in diff",
          repositories_encodings: "Allowed Encodings",
          mail_from: "Email Sender Address",
          plain_text_mail: "Send plaintext emails only",
          show_status_changes_in_mail_subject:
            "Show status changes in issue mail subject",
          notified_events: "Actions to notify by email",
          emails_header: "Email Header",
          emails_footer: "Email Footer",
          mail_handler_body_delimiters: "Truncate emails after",
          mail_handler_enable_regex_delimiters: "Enable regular expressions",
          mail_handler_excluded_filenames: "Excluded attachment filenames",
          mail_handler_enable_regex_excluded_filenames:
            "Enable regular expressions",
          mail_handler_preferred_body_part: "Preferred part of HTML emails",
          mail_handler_api_enabled: "Enable Webservice for incoming emails",
          mail_handler_api_key: "Incoming email Webservice API key",
          enabled_scm: "Enabled Version Control Systems",
          autofetch_changesets: "Fetch commits automatically",
          sys_api_enabled: "Enable Webservice for Repository Management",
          sys_api_key: "Repository Management API Key",
          repository_log_display_limit:
            "Maximum number of revisions displayed on file log",
          commit_logs_formatting: "Apply text formatting to commit messages",
          commit_ref_keywords: "Referencing keywords",
          commit_cross_project_ref:
            "Allow issues of all other projects to be referenced and fixed",
          commit_logtime_enabled: "Enable time logging",
          commit_logtime_activity_id: "Activity for time logging",
          commit_update_keywords: "Auto-Update on Commit Rules",
          project_list_defaults: {
            column_names: "Default Columns Displayed",
          },
          time_entry_list_defaults: {
            column_names: "Default Columns Displayed",
            totalable_names: "Default Totals Displayed",
          },
          plugin_friday: {
            users_allowed_to_manage_sprints:
              "Non-admin users allowed to manage sprints",
            groups_allowed_to_manage_sprints:
              "Groups whos non-admin members are allowed to manage sprints",
            issue_dates_clear_on_backlog:
              "Automatically Fix Dates on Backlog Issues",
            unstarted_issue_statuses: "Unstarted Issue Statuses",
            repository_base_path: "Repository Storage Directory Path",
            monday_access_token: "Monday.com API Access Token",
            monday_board_id: "Monday.com Board ID",
            monday_group_id: "Monday.com Board Group ID",
            monday_enabled: "Enable Monday.com Integration",
            gitlab_api_base_url: "GitLab API Base URL",
            gitlab_api_token: "GitLab API Token",
            gitlab_api_enabled: "Enable GitLab Integration",
            sentry_api_base_url: "Sentry API Base URL",
            sentry_api_token: "Sentry API Token",
            sentry_api_organization: "Sentry Organization Slug",
            sentry_api_enabled: "Enable Sentry Integration",
            google_translate_api_key: "Google Translate API Key",
            google_translate_enabled: "Enable Google Translate",
            chatgpt_api_key: "ChatGPT API Key",
            chatgpt_org_id: "ChatGPT Organization ID",
            chatgpt_project_id: "ChatGPT Project ID",
            chatgpt_enabled: "Enable ChatGPT",
          },
        },
      },
    },
    "settings-edit": { title: "System Settings" },
    "settings-plugin-id": {
      title: "Manage Plugin",
      specificTitle: "{plugin} Configuration",
      content: {
        incompatible: {
          headline: "I'm sorry Dave, I'm afraid I can't do that.",
          title: "Incompatible Plugin",
          text: "This plugin cannot be managed via the Friday UI. Please disable the Friday UI to manage this plugin.",
        },
      },
      fields: {
        repository_base_path: "Repository Storage Directory Path",
        monday_access_token: "Monday.com API Access Token",
        monday_board_id: "Monday.com Board ID",
        monday_group_id: "Monday.com Board Group ID",
        monday_enabled: "Enable Monday.com Integration",
        gitlab_api_base_url: "GitLab API Base URL",
        gitlab_api_token: "GitLab API Token",
        gitlab_api_enabled: "Enable GitLab Integration",
        sentry_api_base_url: "Sentry API Base URL",
        sentry_api_token: "Sentry API Token",
        sentry_api_organization: "Sentry Organization Slug",
        sentry_api_enabled: "Enable Sentry Integration",
        google_translate_api_key: "Google Translate API Key",
        google_translate_enabled: "Enable Google Translate",
        chatgpt_api_key: "ChatGPT API Key",
        chatgpt_org_id: "ChatGPT Organization ID",
        chatgpt_project_id: "ChatGPT Project ID",
        chatgpt_enabled: "Enable ChatGPT",
      },
      onSave: {
        success: "Plugin settings saved successfully",
        error: "An error occurred while saving the plugin settings",
      },
    },
    sprints: { title: "Sprints" },
    "sprints-id": {
      title: "Sprint Management",
      specificTitle: "Sprint #{id}: {name}",
      onSave: {
        success: "Settings updated successfully",
        error: "An error occurred while updating the settings",
      },
      content: {
        tabs: {
          summary: "Summary",
          issues: "Issues",
          edit: "Edit",
        },
      },
    },
    "sprints-new": {
      title: "Create a Sprint",
      fields: {
        name: "Sprint Name",
        start_date: "Start Date",
        end_date: "End Date",
      },
      onSave: {
        success: "Settings updated successfully",
        error: "An error occurred while updating the settings",
      },
    },
    "sys-fetch-changesets": { title: "" },
    "sys-projects": { title: "" },
    "time-entries": { title: "" },
    "time-entries-id": { title: "" },
    "time-entries-id-edit": { title: "" },
    "time-entries-bulk-edit": { title: "" },
    "time-entries-context-menu": { title: "" },
    "time-entries-imports-new": { title: "" },
    "time-entries-new": { title: "" },
    "time-entries-report": { title: "" },
    trackers: {
      title: "Tracker Management",
      admin: { title: "Tracker Management" },
      form: {
        cells: {
          name: "Tracker",
          isInRoadmap: "Roadmap",
          description: "Description",
          defaultStatusId: "Default Status",
          coreFields: "Core Fields",
          customFields: "Custom Fields",
          projects: "In Projects",
          icon: "Icon",
          color: "Color",
          position: "Order",
        },
        values: {
          coreFields: "{selected} Chosen",
          customFields: "{selected} Chosen",
          projects: "{selected} Chosen",
        },
      },
    },
    "trackers-id-edit": { title: "" },
    "trackers-fields": { title: "" },
    "trackers-new": { title: "" },
    users: { title: "User Management", admin: { title: "User Management" } },
    "users-id": { title: "" },
    "users-id-edit": {
      title: "Manage User",
      content: {
        tabs: {
          information: "Basic Information",
          authentication: "Authentication",
          password: "Password",
          notifications: "Notifications",
          preferences: "Preferences",
          memberships: "Memberships",
        },
        fields: {
          mails: "Email Addresses",
          mail: "Email Address",
          password: "Password",
          firstname: "First Name",
          lastname: "Last Name",
          avatar: "Avatar",
          login: "Username",
          status: "Status",
          admin: "Is Administrator",
          password_generator: "Generate Password",
          must_change_passwd: "Must change password on next login",
          send_information: "Send updated account information to user",
          mail_notification: "Send Email Notifications for",
          auto_watch_on: "Automatically watch",
          no_self_notified: "Do not notify on own changes",
          hide_mail: "Hide Email",
          language: "Language",
          timezone: "Timezone",
          comments_sorting: "Comment Ordering",
          history_default_tab: "Default Issue History Tab",
          default_issue_query: "Default Issue Query",
          default_project_query: "Default Project Query",
          groups: "Group Memberships",
          memberships: "Project Memberships",
        },
      },
      onSave: {
        success: "User updated successfully",
        error: "An error occurred while updating the user",
      },
      selfEditing: {
        headline: "Not Allowed",
        title: "You are not allowed to edit your own account",
        text: "Please request assistance from another user with the necessary permissions.",
      },
    },
    "users-user-id-email-addresses": { title: "" },
    "users-user-id-memberships": { title: "" },
    "users-user-id-memberships-id": { title: "" },
    "users-user-id-memberships-id-edit": { title: "" },
    "users-user-id-memberships-new": { title: "" },
    "users-context-menu": { title: "" },
    "users-imports-new": { title: "" },
    "users-new": {
      title: "Create a New User",
      content: {
        tabs: {
          information: "Basic Information",
          authentication: "Authentication",
          password: "Password",
          notifications: "Notifications",
          preferences: "Preferences",
          memberships: "Memberships",
        },
        fields: {
          mails: "Email Addresses",
          mail: "Email Address",
          password: "Password",
          firstname: "First Name",
          lastname: "Last Name",
          avatar: "Avatar",
          login: "Username",
          status: "Status",
          admin: "Is Administrator",
          password_generator: "Generate Password",
          must_change_passwd: "Must change password on next login",
          send_information: "Send updated account information to user",
          mail_notification: "Send Email Notifications for",
          auto_watch_on: "Automatically watch",
          no_self_notified: "Do not notify on own changes",
          hide_mail: "Hide Email",
          language: "Language",
          timezone: "Timezone",
          comments_sorting: "Comment Ordering",
          history_default_tab: "Default Issue History Tab",
          default_issue_query: "Default Issue Query",
          default_project_query: "Default Project Query",
          groups: "Group Memberships",
          memberships: "Project Memberships",
        },
      },
      onSave: {
        success: "User created successfully",
        error: "An error occurred while creating the user",
      },
      selfEditing: {
        headline: "Not Allowed",
        title: "You are not allowed to edit your own account",
        text: "Please request assistance from another user with the necessary permissions.",
      },
    },
    "versions-id": { title: "" },
    "versions-id-edit": { title: "" },
    "watchers-autocomplete-for-mention": { title: "" },
    "watchers-autocomplete-for-user": { title: "" },
    "watchers-new": { title: "" },
    "wiki-pages-auto-complete": { title: "" },
    workflows: {
      title: "Workflow Management",
      admin: {
        title: "Workflow Management",
        newIssueStatuses: "New Issues Statuses for {role}",
        nodes: {
          new: "Initial Statuses",
          standard: "Unused Statuses",
        },
        error: {
          connection: {
            title: "This transition is not allowed",
            selfConnection: "You cannot transition a status to itself",
            sourceMustBeOut:
              "You must use the right handle for outbound status transitions",
            targetMustBeIn:
              "You must use the left handle for inbound status transitions",
          },
          saveFailed: "Failed to save the workflow",
        },
        success: {
          saveSuccess: "Workflow Updated Successfully",
        },
        fieldPermissions: {
          title: "{status} Field Permissions",
          unrestrictied: "Unrestricted",
          readonly: "Read-Only",
          required: "Required",
        },
        roles: {
          canTransition: "Can Transition",
          author: "If Author",
          assignee: "If Assigned",
        },
        sidebar: {
          addStatuses: {
            title: "Add Statuses",
          },
        },
        remove: {
          node: "Remove Issue Status",
          edge: "Remove Transition",
        },
        trackerWorkflowStart: {
          name: "Incoming Issue",
          description: "When a new issue is created",
        },
        copyFrom: {
          title: "Copy from another Tracker",
          field: "Copy from",
          copy: "Copy",
        },
      },
    },
    "workflows-copy": { title: "" },
    "workflows-edit": { title: "" },
    "workflows-permissions": { title: "" },
  },
  labels: {
    id: "ID",
    email: "Email",
    noData: "No data available",
    home: "Home",
    latestNews: "Latest News",
    allNews: "View all news",
    error: "Error",
    success: "Success",
    jumper: {
      title: "Jump to a Project",
      recent: "Recently Viewed",
      bookmarked: "Favorites",
      all: "All Projects",
    },
    all: "All",
    new: "New",
    none: "None",
    filters: "Filters",
    columns: "Columns",
    groupings: "Groupings",
    options: "Options",
    clear: "Clear",
    apply: "Apply",
    forgotPassword: "Forgot Password",
    loggedInAs: "Logged in as",
    queries: {
      operators: {
        "=": "is",
        "!": "is not",
        o: "open",
        c: "closed",
        "!*": "none",
        "*": "any",
        ">=": ">=",
        "<=": "<=",
        "><": "between",
        "<t+": "in less than",
        ">t+": "in more than",
        "><t+": "in the next",
        "t+": "in",
        nd: "tomorrow",
        t: "today",
        ld: "yesterday",
        nw: "next week",
        w: "this week",
        lw: "last week",
        l2w: "last 2 weeks",
        nm: "next month",
        m: "this month",
        lm: "last month",
        y: "this year",
        ">t-": "less than days ago",
        "<t-": "more than days ago",
        "><t-": "in the past",
        "t-": "days ago",
        "~": "contains",
        "!~": "doesn't contain",
        "*~": "contains any of",
        "^": "starts with",
        $: "ends with",
        "=p": "any issues in project",
        "=!p": "any issues not in project",
        "!p": "no issues in project",
        "*o": "any open issues",
        "!o": "no open issues",
        ev: "has been",
        "!ev": "has never been",
        cf: "changed from",
      },
      where: "Where",
      and: "and",
    },
    settings: {
      browser: "Local Settings",
      application: "{name} Administration",
      open: "Settings",
    },
    clearAll: "Clear All",
    save: "Save",
    addFilter: "New Filter",
    displayType: "Show as",
    displayTypes: {
      board: "Board",
      list: "List",
    },
    groupBy: "Group by value of",
    selected: "Selected",
    available: "Available",
    active: "Active",
    inactive: "Inactive",
    archived: "Archived",
    public: "Public",
    private: "Private",
    main: "Main",
    more: "More",
    refresh: "Refresh",
    reset: "Reset",
    noFilters: "No filters selected",
    days: "days",
    showExpandable: "Additional Information",
    showTotalsFor: "Show Totals for",
    yes: "Yes",
    no: "No",
    sorting: "Sorting",
    current: "Current",
    order: {
      asc: "Asc.",
      desc: "Desc.",
    },
    configure: "Configure",
    generate: "Generate",
    add: "Add",
    remove: "Remove",
    repositoryCommitUpdateKeywords: {
      tracker: "Issue Tracker",
      keywords: "Keywords in Commit Message",
      status: "Status to Apply",
      percentages: "Done Ratio to Apply",
    },
    confirm: {
      title: "Are you sure?",
      text: "This action cannot be undone.",
      ok: "Yes",
      cancel: "No",
    },
    backlog: "Backlog",
    sprint: {
      state: {
        current: "Current",
        future: "Future",
        closed: "Closed",
      },
    },
    actions: "Actions",
    open: "Open",
    multiselect: {
      selected: {
        none: "None selected",
        one: "1 selected",
        more: "{count} selected",
      },
      filter: {
        label: "Filter Choices",
      },
    },
    start: "Start",
    openFilePicker: "Browse",
    project: "Project",
    roles: "Roles",
    autoWatchOn: {
      issue_created: "Issues Created by User",
      issue_contributed_to: "Issues Contributed to by User",
    },
    webhooks: {
      title: "Webhooks",
    },
    name: "Name",
    username: "Username",
    localUser: "Application User",
    from: "From",
    to: "To",
    principal: "User / Group",
    issueCategory: "Issue Category",
    assignee: "Assignee",
    events: "Events",
    unknown: "Unknown",
  },
  charts: {
    loading: "Loading chart...",
    filters: "Filters",
    actions: {
      refresh: "Refresh",
    },
  },
  theme: {
    base: {
      colorScheme: "Color Scheme",
    },
  },
  generics: {
    addedLine: "Added by {author} {when}",
    "404": {
      headline: "Whoops, 404",
      title: "Page not found",
      text: "The page you are looking for does not exist.",
    },
    construction: {
      headline: "Under Construction",
      title: "This page is incomplete",
      text: "This page is currently under construction and will be available soon.",
    },
  },
  views: {
    "404": {
      title: "Page not found",
    },
  },
  fields: {
    username: "Username",
    password: "Password",
  },
  errors: {
    response: {
      not_json: {
        title: "Invalid Response",
        text: "The server returned an invalid response",
      },
      error: {
        title: "Operation Failed",
        text: "An error occurred while processing your request",
      },
    },
    copy: {
      failed: {
        caught: "Failed to copy to clipboard due to error: {0}",
      },
    },
    search: {
      failed: "Unable to search at this time",
    },
  },
  successes: {
    copy: "Copied to clipboard",
  },
  validation: {
    bad: "The value is not a valid {label}",
    notAFile: "Please select {label}",
    tooManyFiles: "Please select only 1 file",
    fileTooLarge: "The file you have selected is too large",
    invalidFileType:
      "The file you have selected is not an acceptable file type",
    fileTypeNotAccepted:
      "The file you have selected is not an acceptable file type",
    invalid: "Please enter your {label}",
    required: "Please enter your {label}",
    requiredSelection: "Please choose a {label}",
    requiredUpload: "Please select {label}",
    email: "Please enter a valid email address",
    min: "Your {label} must be at least {min} characters long",
    characters: "The {label} you have input contains invalid characters",
    invalidRsaId: "Please enter a valid {label}",
    country: "Please choose your country of residence",
    valid: "Please enter a valid {label}",
    alternatives: {
      all: "The value did not match all of the criteria.",
      any: "No alternative was found to test against the input due to try criteria.",
      match:
        "No alternative matched the input due to specific matching rules for at least one of the alternatives.",
      one: "The value matched more than one alternative schema.",
      types: "The provided input did not match any of the allowed types.",
    },
    any: {
      custom: "Please enter a valid {label}",
      default: "Please contact support",
      failover: "Please contact support",
      invalid: "The value matched a value listed in the invalid values.",
      only: "Only some values were allowed, the input didn't match any of them.",
      ref: "The input is not valid.",
      required: "A required value wasn't present.",
      unknown: "A value was present while it wasn't expected.",
    },
    boolean: {
      base: "{label} is required",
      accepted: "You must accept the {label}",
    },
    phone: {
      invalid: "Please enter a valid {label}",
      mobile: "Please enter a valid mobile number",
    },
    string: {
      alphanum: "{label} contains characters that are not alphanumeric.",
      alpha: "{label} contains non-alphabetic characters.",
      base: "{label} is required",
      country: "Please select a valid {label}",
      email: "Please enter a valid email.",
      empty: "{label} cannot be empty.",
      length: "{label} is not of the required length.",
      max: "{label} is longer than the maximum allowed length.",
      min: "{label} is shorter than the minimum allowed length.",
      uri: "{label} is not a valid URI.",
      pattern: {
        base: "{label} does not meet requirements.",
        name: "{label} does not meet requirements.",
        invert: {
          base: "{label} does not meet requirements.",
          name: "{label} does not meet requirements.",
        },
      },
    },
  },
  countries: {
    ad: "Andorra",
    ae: "United Arab Emirates",
    af: "Afghanistan",
    ag: "Antigua and Barbuda",
    ai: "Anguilla",
    al: "Albania",
    am: "Armenia",
    ao: "Angola",
    aq: "Antarctica",
    ar: "Argentina",
    as: "American Samoa",
    at: "Austria",
    au: "Australia",
    aw: "Aruba",
    ax: "Åland Islands",
    az: "Azerbaijan",
    ba: "Bosnia and Herzegovina",
    bb: "Barbados",
    bd: "Bangladesh",
    be: "Belgium",
    bf: "Burkina Faso",
    bg: "Bulgaria",
    bh: "Bahrain",
    bi: "Burundi",
    bj: "Benin",
    bl: "Saint Barthélemy",
    bm: "Bermuda",
    bn: "Brunei Darussalam",
    bo: "Bolivia, Plurinational State of",
    bq: "Bonaire, Sint Eustatius and Saba",
    br: "Brazil",
    bs: "Bahamas",
    bt: "Bhutan",
    bv: "Bouvet Island",
    bw: "Botswana",
    by: "Belarus",
    bz: "Belize",
    ca: "Canada",
    cc: "Cocos (Keeling) Islands",
    cd: "Congo, Democratic Republic of the",
    cf: "Central African Republic",
    cg: "Congo",
    ch: "Switzerland",
    ci: "Côte d'Ivoire",
    ck: "Cook Islands",
    cl: "Chile",
    cm: "Cameroon",
    cn: "China",
    co: "Colombia",
    cr: "Costa Rica",
    cu: "Cuba",
    cv: "Cabo Verde",
    cw: "Curaçao",
    cx: "Christmas Island",
    cy: "Cyprus",
    cz: "Czechia",
    de: "Germany",
    dj: "Djibouti",
    dk: "Denmark",
    dm: "Dominica",
    do: "Dominican Republic",
    dz: "Algeria",
    ec: "Ecuador",
    ee: "Estonia",
    eg: "Egypt",
    eh: "Western Sahara",
    er: "Eritrea",
    es: "Spain",
    et: "Ethiopia",
    fi: "Finland",
    fj: "Fiji",
    fk: "Falkland Islands (Malvinas)",
    fm: "Micronesia, Federated States of",
    fo: "Faroe Islands",
    fr: "France",
    ga: "Gabon",
    gb: "United Kingdom",
    gd: "Grenada",
    ge: "Georgia",
    gf: "French Guiana",
    gg: "Guernsey",
    gh: "Ghana",
    gi: "Gibraltar",
    gl: "Greenland",
    gm: "Gambia",
    gn: "Guinea",
    gp: "Guadeloupe",
    gq: "Equatorial Guinea",
    gr: "Greece",
    gs: "South Georgia and the South Sandwich Islands",
    gt: "Guatemala",
    gu: "Guam",
    gw: "Guinea-Bissau",
    gy: "Guyana",
    hk: "Hong Kong",
    hm: "Heard Island and McDonald Islands",
    hn: "Honduras",
    hr: "Croatia",
    ht: "Haiti",
    hu: "Hungary",
    id: "Indonesia",
    ie: "Ireland",
    il: "Israel",
    im: "Isle of Man",
    in: "India",
    io: "British Indian Ocean Territory",
    iq: "Iraq",
    ir: "Iran, Islamic Republic of",
    is: "Iceland",
    it: "Italy",
    je: "Jersey",
    jm: "Jamaica",
    jo: "Jordan",
    jp: "Japan",
    ke: "Kenya",
    kg: "Kyrgyzstan",
    kh: "Cambodia",
    ki: "Kiribati",
    km: "Comoros",
    kn: "Saint Kitts and Nevis",
    kp: "Korea, Democratic People's Republic of",
    kr: "Korea, Republic of",
    kw: "Kuwait",
    ky: "Cayman Islands",
    kz: "Kazakhstan",
    la: "Lao People's Democratic Republic",
    lb: "Lebanon",
    lc: "Saint Lucia",
    li: "Liechtenstein",
    lk: "Sri Lanka",
    lr: "Liberia",
    ls: "Lesotho",
    lt: "Lithuania",
    lu: "Luxembourg",
    lv: "Latvia",
    ly: "Libya",
    ma: "Morocco",
    mc: "Monaco",
    md: "Moldova, Republic of",
    me: "Montenegro",
    mf: "Saint Martin, (French part)",
    mg: "Madagascar",
    mh: "Marshall Islands",
    mk: "North Macedonia",
    ml: "Mali",
    mm: "Myanmar",
    mn: "Mongolia",
    mo: "Macao",
    mp: "Northern Mariana Islands",
    mq: "Martinique",
    mr: "Mauritania",
    ms: "Montserrat",
    mt: "Malta",
    mu: "Mauritius",
    mv: "Maldives",
    mw: "Malawi",
    mx: "Mexico",
    my: "Malaysia",
    mz: "Mozambique",
    na: "Namibia",
    nc: "New Caledonia",
    ne: "Niger",
    nf: "Norfolk Island",
    ng: "Nigeria",
    ni: "Nicaragua",
    nl: "Netherlands",
    no: "Norway",
    np: "Nepal",
    nr: "Nauru",
    nu: "Niue",
    nz: "New Zealand",
    om: "Oman",
    pa: "Panama",
    pe: "Peru",
    pf: "French Polynesia",
    pg: "Papua New Guinea",
    ph: "Philippines",
    pk: "Pakistan",
    pl: "Poland",
    pm: "Saint Pierre and Miquelon",
    pn: "Pitcairn",
    pr: "Puerto Rico",
    ps: "Palestine, State of",
    pt: "Portugal",
    pw: "Palau",
    py: "Paraguay",
    qa: "Qatar",
    re: "Réunion",
    ro: "Romania",
    rs: "Serbia",
    ru: "Russian Federation",
    rw: "Rwanda",
    sa: "Saudi Arabia",
    sb: "Solomon Islands",
    sc: "Seychelles",
    sd: "Sudan",
    se: "Sweden",
    sg: "Singapore",
    sh: "Saint Helena, Ascension and Tristan da Cunha",
    si: "Slovenia",
    sj: "Svalbard and Jan Mayen",
    sk: "Slovakia",
    sl: "Sierra Leone",
    sm: "San Marino",
    sn: "Senegal",
    so: "Somalia",
    sr: "Suriname",
    ss: "South Sudan",
    st: "Sao Tome and Principe",
    sv: "El Salvador",
    sx: "Sint Maarten, (Dutch part)",
    sy: "Syrian Arab Republic",
    sz: "Eswatini",
    tc: "Turks and Caicos Islands",
    td: "Chad",
    tf: "French Southern Territories",
    tg: "Togo",
    th: "Thailand",
    tj: "Tajikistan",
    tk: "Tokelau",
    tl: "Timor-Leste",
    tm: "Turkmenistan",
    tn: "Tunisia",
    to: "Tonga",
    tr: "Turkey",
    tt: "Trinidad and Tobago",
    tv: "Tuvalu",
    tw: "Taiwan",
    tz: "Tanzania, United Republic of",
    ua: "Ukraine",
    ug: "Uganda",
    um: "United States Minor Outlying Islands",
    us: "United States",
    uy: "Uruguay",
    uz: "Uzbekistan",
    va: "Holy See",
    vc: "Saint Vincent and the Grenadines",
    ve: "Venezuela, Bolivarian Republic of",
    vg: "Virgin Islands, British",
    vi: "Virgin Islands, U.S.",
    vn: "Viet Nam",
    vu: "Vanuatu",
    wf: "Wallis and Futuna",
    ws: "Samoa",
    xx: "Unknown",
    xk: "Kosovo",
    ye: "Yemen",
    yt: "Mayotte",
    za: "South Africa",
    zm: "Zambia",
    zw: "Zimbabwe",
  },
  $vuetify: {
    badge: "Badge",
    open: "Open",
    close: "Close",
    dismiss: "Dismiss",
    confirmEdit: {
      ok: "OK",
      cancel: "Cancel",
    },
    dataIterator: {
      noResultsText: "No matching records found",
      loadingText: "Loading items...",
    },
    dataTable: {
      itemsPerPageText: "Rows per page:",
      ariaLabel: {
        sortDescending: "Sorted descending.",
        sortAscending: "Sorted ascending.",
        sortNone: "Not sorted.",
        activateNone: "Activate to remove sorting.",
        activateDescending: "Activate to sort descending.",
        activateAscending: "Activate to sort ascending.",
      },
      sortBy: "Sort by",
    },
    dataFooter: {
      itemsPerPageText: "Items per page:",
      itemsPerPageAll: "All",
      nextPage: "Next page",
      prevPage: "Previous page",
      firstPage: "First page",
      lastPage: "Last page",
      pageText: "{0}-{1} of {2}",
    },
    dateRangeInput: {
      divider: "to",
    },
    datePicker: {
      itemsSelected: "{0} selected",
      range: {
        title: "Select dates",
        header: "Enter dates",
      },
      title: "Select date",
      header: "Enter date",
      input: {
        placeholder: "Enter date",
      },
    },
    noDataText: "No data available",
    carousel: {
      prev: "Previous visual",
      next: "Next visual",
      ariaLabel: {
        delimiter: "Carousel slide {0} of {1}",
      },
    },
    calendar: {
      moreEvents: "{0} more",
      today: "Today",
    },
    input: {
      clear: "Clear {0}",
      prependAction: "{0} prepended action",
      appendAction: "{0} appended action",
      otp: "Please enter OTP character {0}",
    },
    fileInput: {
      counter: "{0} files",
      counterSize: "{0} files ({1} in total)",
    },
    timePicker: {
      am: "AM",
      pm: "PM",
      title: "Select Time",
    },
    pagination: {
      ariaLabel: {
        root: "Pagination Navigation",
        next: "Next page",
        previous: "Previous page",
        page: "Go to page {0}",
        currentPage: "Page {0}, Current page",
        first: "First page",
        last: "Last page",
      },
    },
    stepper: {
      next: "Next",
      prev: "Previous",
    },
    rating: {
      ariaLabel: {
        item: "Rating {0} of {1}",
      },
    },
    loading: "Loading...",
    infiniteScroll: {
      loadMore: "Load more",
      empty: "No more",
    },
  },
  columns: {
    projectquery: {
      status: "Status",
      short_description: "Description",
      homepage: "Homepage",
      identifier: "Identifier",
    },
    issuequery: {
      id: "ID",
      project: "Project",
      tracker: "Tracker",
      status: "Status",
      priority: "Priority",
      author: "Author",
      assigned_to: "Assignee",
      category: "Category",
      fixed_version: "Target Version",
      parent: {
        "": "Parent",
        subject: "Parent",
      },
      total_estimated_hours: "Estimated Time",
      spent_hours: "Spent Time",
      total_spent_hours: "Total Spent Time",
      relations: "Relations",
      attachments: "Attachments",
      last_notes: "Last Notes",
    },
  },
  password_char_classes: {
    uppercase: "Uppercase",
    lowercase: "Lowercase",
    digits: "Numbers",
    special_chars: "Special Characters",
  },
  rtu: {
    disconnected: {
      title: "No Connection",
      text: "Please wait while a connection is re-established",
    },
  },
  timeTracking: {
    start: "Start",
    activitySelector: {
      title: "What activity are you starting?",
    },
    fields: {
      activity: "Activity",
      status: "Issue Status",
    },
    onStop: {
      error: "Failed to stop timer. Try again.",
    },
    onStart: {
      error: "Failed to start timer",
    },
    onButtonClick: {
      error: {
        forbidden: "You are not allowed to perform this action",
        unknownState: "An unknown error occurred",
      },
    },
  },
  actionMenu: {
    none: {
      title: "No Actions",
      text: "No actions are available",
    },
    filterTo: {
      title: "Filter",
    },
    delete: {
      title: "Delete",
      confirm: "Are you sure you want to delete this custom field?",
    },
  },
  issueActionMenu: {
    edit: {
      title: "Edit Issue",
    },
    view: {
      title: "View Issue",
    },
    assignToSprint: {
      title: "Sprint(s)",
    },
    unassignFromSprint: {
      title: "Send to Backlog",
    },
    changeStatus: {
      title: "Status",
    },
    assignTo: {
      title: "Assignee",
    },
    changeTracker: {
      title: "Tracker",
    },
    changeVersion: {
      title: "Target Version",
    },
    changeUrgency: {
      title: "Urgency",
    },
    changeImpact: {
      title: "Impact",
    },
    doneRatio: {
      title: "% Done",
    },
    copy: {
      title: "Copy",
    },
    delete: {
      title: "Delete",
    },
    filterTo: {
      title: "Filter",
    },
  },
  customFieldActionMenu: {
    filterTo: {
      title: "Filter",
    },
    delete: {
      title: "Delete",
      confirm: "Are you sure you want to delete this custom field?",
    },
  },
  roleActionMenu: {
    filterTo: {
      title: "Filter",
    },
    delete: {
      title: "Delete",
      confirm: "Are you sure you want to delete this role?",
    },
  },
  groupActionMenu: {
    filterTo: {
      title: "Filter",
    },
    delete: {
      title: "Delete",
      confirm: "Are you sure you want to delete this group?",
    },
  },
  userActionMenu: {
    filterTo: {
      title: "Filter",
    },
    none: {
      title: "No Actions Available",
    },
    delete: {
      title: "Delete",
      confirm: "Are you sure you want to delete this user?",
    },
  },
  integrationsActionMenu: {
    filterTo: {
      title: "Filter",
    },
    none: {
      title: "No Actions Available",
    },
    delete: {
      title: "Delete",
      confirm: "Are you sure you want to delete this user?",
    },
  },
  githubProjectActionMenu: {
    installWebhook: {
      title: "Install Webhook",
    },
  },
  gitlabProjectActionMenu: {
    installWebhook: {
      title: "Install Webhook",
    },
  },
  mondayBoardActionMenu: {
    installWebhook: {
      title: "Install Webhook",
    },
  },
  messages: {
    copiedToClipboard: "Copied to clipboard",
    failedToCopyToClipboard: "Failed to copy to clipboard",
  },
};
